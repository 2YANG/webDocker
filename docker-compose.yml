version: '3'
services: 
  cnode:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   args:
    #     - env=value
    container_name: egg-redis
    image: cnode/egg-cnode:latest
    environment:
      - NODE_ENV=production
      - EGG_SERVER_ENV=prod
      - EGG_REDIS_DB=0
      - EGG_REDIS_HOST=redis
      - EGG_REDIS_PORT=6379
      - EGG_REDIS_PASSWORD=12345678
      - EGG_MONGODB_URL=mongodb://egg_mongo:12345678@mongodb:27017/egg_mongo
      - EGG_MINI_ASSETS=true
#      - EGG_PASSPORT_GITHUB_CLIENT_ID=test
#      - EGG_PASSPORT_GITHUB_CLIENT_SECRET=test
      # - EGG_SITE_STATIC_HOST=${EGG_SITE_STATIC_HOST}
#      - EGG_ALINODE_APPID=appid
#      - EGG_ALINODE_SECRET=secret
    depends_on:
      - redis
      - mysql
#      - mongodb
    networks:
      - egg_networks
    ports:
      - 7001:7001

  redis:
    image: redis:3.2-alpine
    command: redis-server --appendonly yes --requirepass 12345678
    volumes:
      - egg-redis:/data
    networks:
      - egg_networks
    # ports:
    #   - 6379:6379

  mysql:
      container_name: egg-mysql
      image: mysql:5.6
      restart: always
      environment:
        - MYSQL_INITDB_ROOT_USERNAME=root
        - MYSQL_INITDB_ROOT_PASSWORD=12345678
      volumes:
        - egg-mysql:/data/db
      networks:
        - egg_networks
#      ports:
#        - 3306:3306

#  mongodb:
#    container_name: egg-mongo
#    image: mongo:3.2
#    restart: always
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=12345678
#      - MONGO_INITDB_DATABASE=egg_mongo
#    volumes:
#      - egg-mongo:/data/db
#      - ./init.d/mongo:/docker-entrypoint-initdb.d
#    networks:
#      - egg_networks
    # ports:
    #   - 27017:27017

volumes:
  egg-redis:
  egg-mysql:
#  egg-mongo:

networks:
  egg_networks:
    driver: bridge    
